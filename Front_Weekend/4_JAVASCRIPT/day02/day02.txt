연산자

    산술연산자
        ( +, -, *, /, % )

        ex)
            let a = 5;
            let b = 2;

            console.log(a+b) // 7

            let c = a + b;
            console.log(c) // 7

            console.log(a - b) // 3
            console.log(a * b) // 10
            console.log(a / b) // 2.5
            console.log(a % b) // 1

            let d = true;
            (true = 1, false = 0)
            console.log(a + d) // 6

            console.log(a + null) // 5
            console.log(a + undefined) // NaN (Not a Numbers)

    단항 산술 연산자
        ++ 값이 1 증가
        -- 값이 1 감소

        + 영향X
        - 음수

        let a = 5;
        ++a // 5
        +a // 5

    전위 연산자
        a++ ==> 연산 후에 값을 더해라
        ++a ==> 연산 전에 값을 더해라

    문자열 연결 연산자
        let a = "안";
        let b = "녕";

        console.log(a + b) // "안녕"

        a = '1';
        b = 2;

        console.log(a + b) // "12"

        => 피연ㄴ산자 중 하나 이상이 문자열인 경우 문자열로 동작

    할당 연산자
        =
            ex) let a = 5;

        +=
            값의 누적
            ex)
                let a = 5;
                a += 5; // 10 ---> a = a + 5;
                a 값에 5를 더해라 (누적시켜라)

                let str = "안";
                str += "녕"; -----> str = str + "녕"
                // 안녕
        -=
        *=
        ...

    우선 순위 연산자 ()

        ex)
            10 * 2 + 2 => 22
            10 * (2 + 2) => 40

            - if(조건식)

==============================================================================================================================================================

명제의 참/거짓을 구분할 때 사용 --> boolean 타입을 반환 (true / false)

    논리연산자
        || 논리함 (or) - 둘 중에 하나라도 true면 true
        && 논리곱 (and) - 둘 다 treu어야만 true
        ! 부정 (not) - !true --> false

        ex)
            true || true --> T
            true || false --> T
            false || true --> T
            false || false --> F

    비교 연산자
        == 동등 비교 -------> 값만 같은지
            ex)
                 5 == "5" // true

        === 일치 비교 ------> 값과 자료형이 같은지
            ex)
                5 === "5" // false

        != 부등 비교 -------> 값만 다른지
            ex) 
                "5" != 3 // true
                "5" != 5 // false

        !== 불일치 ---------> 값과 타입이 다른지
            ex)
                "5" !== 5 // true

==============================================================================================================================================================

제어문

    1. 조건문
        특정한 조건이 주어지고 그 조건의 평가(참, 거짓 [논리연산자, 비교연산자])에 따라 결과가
        달라지는 명령문

            (1) if .. else
                if --> 만약에

                ex)
                    let a = 4
                    if(a === 5){
                        // 조건식이 참이면 실행할 문장
                        ++a
                        // 아니면
                        // 조건식이 거짓이면 실행할 문장
                    } else {
                        --a
                    }

                ============================================

                    if(조건식1) {
                        ...
                        조건식 1이 참이면 실행                        
                    } else if(조건식 2) {
                        ...
                        조건식 2가 참이면 실행
                    } else {
                        ...
                        그 외의 경우 실행
                        (조건식1과 조건식2가 거짓일 경우)
                    }

            (2) switch
                변수의 값을 기준으로 일치하는 문장 실행

                switch(기준으로 삼을 변수) {
                    case: 값1;
                        변수가 값1과 일치하면 실행할 문장;
                    case: 값2
                        변수가 값2와 일치하면 실행할 문장;
                    default: 
                        기본값;
                }

    2. 반복문