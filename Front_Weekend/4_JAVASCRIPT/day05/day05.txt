*** Array (배열)

    자바스크립트에서 배열은 이름과 인덱스로 참조되는 *정렬된* 값의 집함
    배열을 구성한느 각각의 값을 요소라고 하며, 배열의 위치를 가르키는 숫자를 인덱스라고 합니다.

    ex)
        const arr = [1, 2, 3, 4, 5, 6]

        arr[0] = 1

    자바스크립트 배열의 특징
        1. 배열 요소의 타입이 고정되어 있지 않습니다
            ex)
                [1, "김재하", {}, [], true]

        2. 배열의 인덱스는 연속적이지 않아도 되며, 특정 배열 요소가 비어있을 수 있습니다.
            const arr = [1, 2, 3, 4]
            arr[1] = 0
            // 1, 0, 3, 4
            
        3. 자바스크립트의 배열은 Array라는 객체로 다루어진다

        배열의 길이 = const arr [1, 2, 3, 4]
                      console.log(arr.length) // 4

============================================================================================================================================================

**** 배열의 내장함수(부가기능)

    pop, push, unshift, shift, concet, join, revers, sort, slice, splice ...

    key point
        - 원본 배열
        - 반환
        - 위치

    배열명.push()
        -원본 배열의 *맨 끝*에 요소를 추가
        ex)
            const arr = [1, 2, 3, 4]
            arr.push(5)
            console.log(arr)

    배열명.pop()
        - 원본 배열의 맨 끝에 요소를 제거하고 제거된 요소를 반환한다
        ex )
            const arr = [1, 2, 3, 4, 5]
            const el = arr.pop()
            console.log(arr, el)

    배열명.unshift()
        -원본 배열의 맨 처음에 요소를 추가

    배열명.shift()
        - 원본 배열의 맨 처음에 값을 제거, 제거된 요소를 반환한다

    배열명.join()
        - 배열 요소 사이에 원하는 문자를 삽입한 문자열을 반환

    배열명.revers()
        - 원본 배열의 순서를 역순 배치

    배열명.sort()
        - 원본 배열의 정렬 (오름차순, 내림차순)

    배열명.splice(start, end, item)
        - 원본 배열의 요소를 제거하고 해당 요소 위치에 값을 추가, 제거된 요소를 반환

        ex)
            const arr = [1, 2, 3, 4, 5]
            const newArr = arr.splice(1,2,'배고프다')
            console.log(arr, newArr)
            // [1, 배고프다, 4, 5], [1,2]

    배열명.slice(start, end)
        - 인자로 지정된 배열의 부분을 복사한다. 이때 원본 배열은 수정되지 않습니다.

        ex)
            const arr = [1, 2, 3, 4, 5]
            const el = arr.slice(2,3) // [3,4]
    
    // 특정 값의 위치를 찾거나 유무를 찾을 때
    
    배열명.indexOf()
        인자(파라미터, 매개변수)로 전달받은 값이 해당 배열에 있는지 인덱싱하고
        값이 있다면 가장 먼저 있는 요소의 인덱스 값을 반환, 없다면 -1을 반환

        cosnt arr = [1,2, 3, 4, 5]
        const index = arr.indexOf(3) // 2
        const indexs2 = arr/indexO(6) // -1

        if(index < 0){
        
        }
        // 조건식에 특정한 변수명만 들어가게 되면 해당 변수가 비어있는지 아닌지만 확인
        // indexOf의 경우 요소가 없으면 -1을 반환하기 때문에 일반 조건식 비교로 비교해서는 안됩니다.
        // 반드시 부등호를 비교


    배열명.includes

        const arr = [1, 2, 3, 4, 5]
        const el = arr.includes(5) // true

        if(el) {
            ...
        }
        
    배열명.lastIndexOf


        