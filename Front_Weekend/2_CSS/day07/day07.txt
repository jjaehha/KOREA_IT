:root 선택자
    
    명시도 및 우선순위가 :root 선택자가 더 높다는 점만 제외하면
    html 선택자와 똑같습니다.

    css 속성 값을 저장해둘 수 있음

    ex)
    :root {
        --저장명: css 속성 값
    }

    :root {
        --brand-grean: #0f0;
    }

    header {
        background-color: var(--branhd-green)
    }

미디어 쿼리
    
    단말기의 유형에 따라 화면의 해상도는 다릅니다.
    따라서 사용자가 보고 있는 뷰포트에 따라서 다른 유형의 화면(레이아웃)을 보여주여야만

    media qurey

        all
        print
        * screen
        speech

    ex)
        @media 유형 (속성: 값) and (속성: 값) {
            ... CSS 문법
            
            p{
                ...
            }
        }
     
------------------------------------------------------------------------------------------------------------------------------------------------

그리드 래이아웃
    
    표 형태의 레이아웃

------------------------------------------------------------------------------------------------------------------------------------------------

트랜스폼
    transform (변화시킨다)

        translate (이동, absolute + 중간정렬, 슬라이드 배너)
        scale (배율, 좌우 반전)
        rotate (회전)
        skew (경사도)

------------------------------------------------------------------------------------------------------------------------------------------------

트랜지션
    transition (전환시킨다)

        요소에 추가한 css 스타일의 전환 효과 및 지속 시간을 설ㄹ정
        (서서히 바뀌게 만들 수 있다)

        ex) transition: property duration timing-function delay

            property: 전환 효과를 적용할 css 속성명 (widht, height, opacity)
            duration: 걸리는 시간
            timing-function: 전화효과의 변화되는 속도 값
                linear: 일정속도
                ease: 변화하면서 [ease, ease-in-out, ease-in, ease-out]
                cubic-bazier(n,n,n,n): 사용자 지정

------------------------------------------------------------------------------------------------------------------------------------------------

애니메이션
    animation
        요소의 현재 스타일을 다른 스타일로 변화 * 반복

        ex)
            * 적용할 스타일은 이전 프레임이 아닌 초기 스타일 기준

            @keyframes 애니메이션명 {
                from 혹은 0% {
                    초기 상태
                }

                정수% (50%, 70%, 80%) {
                    중간 상태
                }

                to 혹은 100% {
                    마지막 상태
                }
            }
        
        선택자 [
            animation: 애니메이션명 duration count direction
        ]