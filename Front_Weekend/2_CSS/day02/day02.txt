* 속성 선택자
    속성(properties)
        <요소명 속성="속성값" > </요소명>

        1.
        [속성명] {
            ...
        }

        2.
        [속성명 = "속성값"] {
            ...
        }

        ex)
        [href] {
            ...
        }

        [href="https://www.naver.com"] {
            ...
        }

        <a href="https://www.daum.net"></a>
        <a href="https://www.naver.net"></a>

        [type="checkbox"] {
            ...
        }

        [name="user-email"] {
            ...
        }

        * 심화
            [속성명 = "속성값"] -> 값이 완벽 일치

            [속성명 ~= "속성값"] -> 값이 속성값과 다른 값이 띄어쓰기로 구분
            ex) name="apple banana"

            [속성명 *= "속성값"] -> 속성 값이 포함된
            ex) name = bbapplecc"

            [속성명 $=  "속성값"] -> 속성값이 접미사로 끝나는 요소
            ex) name = "~apple"

            [속성명 ^= "속성값"] -> 속성값이 접두사로 시작하는 요소
            ex) naem = "apple~"

            [속성명 |= "속성값"] -> 속성값이 일치하거나 접두사로 존재 - 으로 연결
            ex) name = "qpple - ..." 

------------------------------------------------------------------------------------------------------------------------------------------------

* 가상 클래스 선택자
    클래스르 추가 할 필요 없이 요소 중에서 순서에 따라 원하는 특정 요소 스타일 지정

    ex)
        <ul>
            <li></li> <- 첫번째 요소에는 빨간색 글자
            <li></li> <- 첫번째 요소에는 초록색 글자
            <li></li> <- 첫번째 요소에는 파란색 글자
        </ul>

               :nth-child() 
        ul > li:nth-of-type() {
            ...
        }

        : first-child
        : last-child
        : nth-child(odd) 홀수번 째만
        : nth-child(even) 짝수번 째만
        : nth-child(2n-1) 트정 규칙

* 가상 요소 선택자
    선택된 요소 뒤나 혹은 앞에 가상의 요소(태그)를 만들어내어 스타일로 지정

    선택자::before
    선택자::after

        ex) span.auth-btn::after {
            content: "|"
        }

        <span class="auth-btn">로그인</span>
        <span class="auth-btn">회원가입</span>
        => 로그인|회원가입|

------------------------------------------------------------------------------------------------------------------------------------------------

* 자주 사용하는 가상선택자

    : link -> 하이퍼 링크가 연결되어있을 때
    : visited -> 하이퍼 링크를 방문한 적이 있을때

    : active -> 마우스(커서)가 해당 요소를 클릭했을 때
    : hover -> 마우스(커서)가 해당 요소 위에 위치하고 있을 때
    
    : focus -> 입력 태그를 클릭해서 해당 인풋이 활성화 되어있을 때때
    ::placeholder -> 입력 태그의 placehholder 속성 제어할 때

    ::-webkit-scrollbar

-----------------------------------------------------------------------------------------------------------------------

CSS 속성
    color 표기법

    1. 색상 이름 표현
        red, white, green, blue, black ...

    2. RGB 색상 값으로 표현
        (0 ~ 255)

        RGB(0~255, 0~255, 0~255)
        rgba(0~255, 0~255, 0~255, 0~1)
            --
            알파(투명도)

    3. 16진수 RGB 색상 값으로 표현

        16진수 (00~ff)
        RGB와 원리는 똑같음 00(흰색), ff(빨강, 초록, 파랑)

         R  G  B
        #00/00/00

----------------------------------------------------------------------------------------------------------------------

    Text 관련 CSS 속성

        ** color: 텍스트 색상

        letter-spacing: 문자 단위 간격

        word-spacing: 단어 사이 간격

        ** text-align: 텍스트 정렬 (left, right, center)

        ** line-height: 줄간 (줄과 줄 사이의 간격)

        * text-indent: 첫 줄의 들여쓰기

        * text-decoration: 텍스트의 여러 효과를 설정하거나 제거

        text-transform: 영문자에 대해 대소문자를 결정

        font-variant: 소문자를 더 작은 크기의 대문자로 변환

        * text-shadow: 텍스트의 그림자 번짐 효과 등을 결정

        * white-space: 띄어쓰기, 줄바꿈 등을 어떻게 할건지 결정

        * text-overflow: 텍스트가 기준을 벗어난 경우 어떻게 처리할지 결정

        ** font-size: 텍스트의 크기 설정

        ** font-weight: 텍스트의 굻기 (100 ~ 900) 숫자가 커질수록, 굵어짐, 기본 400, bold 700

        ** font-family: 텍스트의 글꼴 설정