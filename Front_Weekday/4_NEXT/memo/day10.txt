컴포넌트 재사용
    (게시글 수정 페이지와 작성 페이지)

페이지네이션
    게시글 목록에서 한 페이지 당 10(15) 씩 보이도록 설정하기

외부라이브러리 설치 
    (UI와 관련된 라이브러리, mui, antd, ...)
    mui 
    --> styled 컴포넌트를 활용해서 각 태그에 디자인을 입힌 뒤 사용
    --> 매번 프로젝트 만들때마다 만드는 것이 비효율적이니까
    --> 자주 쓰이는 디자인을 모아서 미리 만들어놓고, 필요할 때마다 갖다 쓰자

배열.slice(start, end)
    인자로는 두 객의 숫자를 넘겨줘야하고, 
    앞에있는 매개변수는 자르기 시작하는 인덱스번호(포함)를 의미하고
    뒤에있는 매개변수는 자르기를 끝내는 인덱스번호(포함X)을 의미한다 
    ex) ar.slice(3, 6) --> ar을 3번부터 6미만인(5)번까지 자른 결과

    함수 사용 결과는 배열이며, 함수를 사용하더라도 원래 배열에는 손상이 가지 않는다

배열.filter((요소)=>{true 아니면 false 로 return})
    기존에 있는 배열을 바탕으로 특정 조건을 충족시키는 요소들만 뽑아서 새로운 배열을 만들때 사용하는 함수
    인자로 넘겨주는 콜백함수는 매개변수로 원본 배열의 요소를 전달받고, 해당 콜백함수가
    true를 return하는 경우를 만족하는 요소들만 새로운 배열에 담아준 뒤
    새롭게 만들어진 배열을 return 한다
    원본 배열은 훼손하지 않는다 

문자열.includes(문자열2)
    문자열 안에 문자열2가 포함되어있으면 true 아니면 false가 return 되는 함수

게시글 검색어 입력 
    입력된 검색어에 알맞은 게시글만 보여주기

리액트의 state 변수 변경 과정
    만일 여러개의 state변수를 동시에 변경해야하는 경우가 있다면
    setState 함수를 실행 할때마다 state변수 속에 들어있는 값을 변경해주지 않는다.
    (이유는 비효율적이라서)

    state변수는 값이 변경될때마다 re-rendering을 해야한다

    onClick = () => {
        setState1(10); //state1이 10으로 바뀌어야한다
        setState2(20); //state2이 20으로 바뀌어야한다
        setState3(30); //state3이 30으로 바뀌어야한다
    }--> re-rendering

발생할 수 있는 이슈
    const MyComponent = ()=>{
        const [ count, setCount ] = useState(1);
        const [ msg, setMsg ] = useState('hello');
        const onClick1 = () =>{
            setCount(count + 50);
            setMsg(msg + '반가워');
        }
        return(
            <>
                <p>{count}</p>
                <p>{msg}</p>
            </>
        );
    }